import { ReactiveFormConfig } from "./reactive-form-config";
var ObjectMaker = /** @class */ (function () {
    function ObjectMaker() {
    }
    ObjectMaker.toJson = function (key, config, values) {
        var message = config ? config.message : null;
        var messageKey = undefined;
        if (!message && config && config.messageKey)
            messageKey = config.messageKey;
        var messageText = (message) ? message : (ReactiveFormConfig && ReactiveFormConfig.json && ReactiveFormConfig.json.validationMessage && ReactiveFormConfig.json.validationMessage[messageKey || key]) ? ReactiveFormConfig.json.validationMessage[messageKey || key] : '';
        values.forEach(function (t, index) {
            messageText = messageText.replace("{{" + index + "}}", t);
        });
        var jObject = {};
        jObject[key] = {
            message: messageText, refValues: values
        };
        return jObject;
    };
    ObjectMaker.null = function () {
        return null;
    };
    ObjectMaker.getPasswordMessage = function () {
        var messageKey = "password";
        return (ReactiveFormConfig && ReactiveFormConfig.json && ReactiveFormConfig.json.validationMessage && ReactiveFormConfig.json.validationMessage[messageKey]) ? ReactiveFormConfig.json.validationMessage[messageKey] : '';
    };
    return ObjectMaker;
}());
export { ObjectMaker };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JqZWN0LW1ha2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHJ4d2ViL3JlYWN0aXZlLWZvcm0tdmFsaWRhdG9ycy8iLCJzb3VyY2VzIjpbInV0aWwvb2JqZWN0LW1ha2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTVEO0lBQUE7SUF3QkEsQ0FBQztJQXZCVSxrQkFBTSxHQUFiLFVBQWMsR0FBVyxFQUFFLE1BQVUsRUFBRSxNQUFXO1FBQzlDLElBQUksT0FBTyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzdDLElBQUksVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFHLENBQUMsT0FBTyxJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsVUFBVTtZQUN0QyxVQUFVLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUNuQyxJQUFJLFdBQVcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsa0JBQWtCLElBQUksa0JBQWtCLENBQUMsSUFBSSxJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsVUFBVSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUN4USxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQUMsQ0FBQyxFQUFFLEtBQUs7WUFDcEIsV0FBVyxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsT0FBSyxLQUFLLE9BQUksRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN6RCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNqQixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDWCxPQUFPLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxNQUFNO1NBQzFDLENBQUM7UUFDRixPQUFPLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBQ00sZ0JBQUksR0FBWDtRQUNJLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTSw4QkFBa0IsR0FBekI7UUFDSSxJQUFJLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDNUIsT0FBTyxDQUFDLGtCQUFrQixJQUFJLGtCQUFrQixDQUFDLElBQUksSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBO0lBQzdOLENBQUM7SUFDTCxrQkFBQztBQUFELENBQUMsQUF4QkQsSUF3QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdGl2ZUZvcm1Db25maWcgfSBmcm9tIFwiLi9yZWFjdGl2ZS1mb3JtLWNvbmZpZ1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE9iamVjdE1ha2Vye1xyXG4gICAgc3RhdGljIHRvSnNvbihrZXk6IHN0cmluZywgY29uZmlnOmFueSwgdmFsdWVzOiBhbnkpIHtcclxuICAgICAgICBsZXQgbWVzc2FnZSA9IGNvbmZpZyA/IGNvbmZpZy5tZXNzYWdlIDogbnVsbDtcclxuICAgICAgICBsZXQgbWVzc2FnZUtleSA9IHVuZGVmaW5lZDtcclxuICAgICAgICBpZighbWVzc2FnZSAmJiBjb25maWcgJiYgY29uZmlnLm1lc3NhZ2VLZXkpXHJcbiAgICAgICAgICAgIG1lc3NhZ2VLZXkgPSBjb25maWcubWVzc2FnZUtleTtcclxuICAgICAgICBsZXQgbWVzc2FnZVRleHQgPSAobWVzc2FnZSkgPyBtZXNzYWdlIDogKFJlYWN0aXZlRm9ybUNvbmZpZyAmJiBSZWFjdGl2ZUZvcm1Db25maWcuanNvbiAmJiBSZWFjdGl2ZUZvcm1Db25maWcuanNvbi52YWxpZGF0aW9uTWVzc2FnZSAmJiBSZWFjdGl2ZUZvcm1Db25maWcuanNvbi52YWxpZGF0aW9uTWVzc2FnZVttZXNzYWdlS2V5IHx8IGtleV0pPyBSZWFjdGl2ZUZvcm1Db25maWcuanNvbi52YWxpZGF0aW9uTWVzc2FnZVttZXNzYWdlS2V5IHx8IGtleV0gOiAnJztcclxuICAgICAgICB2YWx1ZXMuZm9yRWFjaCgodCAsaW5kZXgpPT4ge1xyXG4gICAgICAgICAgICBtZXNzYWdlVGV4dCA9IG1lc3NhZ2VUZXh0LnJlcGxhY2UoYHt7JHtpbmRleH19fWAsIHQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGxldCBqT2JqZWN0ID0ge307XHJcbiAgICAgICAgak9iamVjdFtrZXldID0ge1xyXG4gICAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlVGV4dCwgcmVmVmFsdWVzOiB2YWx1ZXNcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiBqT2JqZWN0O1xyXG4gICAgfVxyXG4gICAgc3RhdGljIG51bGwoKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldFBhc3N3b3JkTWVzc2FnZSgpIHtcclxuICAgICAgICBsZXQgbWVzc2FnZUtleSA9IFwicGFzc3dvcmRcIjtcclxuICAgICAgICByZXR1cm4gKFJlYWN0aXZlRm9ybUNvbmZpZyAmJiBSZWFjdGl2ZUZvcm1Db25maWcuanNvbiAmJiBSZWFjdGl2ZUZvcm1Db25maWcuanNvbi52YWxpZGF0aW9uTWVzc2FnZSAmJiBSZWFjdGl2ZUZvcm1Db25maWcuanNvbi52YWxpZGF0aW9uTWVzc2FnZVttZXNzYWdlS2V5XSkgPyBSZWFjdGl2ZUZvcm1Db25maWcuanNvbi52YWxpZGF0aW9uTWVzc2FnZVttZXNzYWdlS2V5XSA6ICcnXHJcbiAgICB9XHJcbn1cclxuIl19