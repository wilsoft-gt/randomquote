import { alphaValidatorExtension, allOfValidatorExtension, alphaNumericValidatorExtension, choiceValidatorExtension, compareValidatorExtension, containsValidatorExtension, creditCardValidatorExtension, differentValidatorExtension, digitValidatorExtension, emailValidatorExtension, evenValidatorExtension, factorValidatorExtension, greaterThanEqualToValidatorExtension, greaterThanValidatorExtension, hexColorValidatorExtension, jsonValidatorExtension, leapYearValidatorExtension, lessThanEqualToValidatorExtension, lessThanValidatorExtension, lowerCaseValidatorExtension, macValidatorExtension, maxDateValidatorExtension, maxLengthValidatorExtension, maxNumberValidatorExtension, minDateValidatorExtension, minLengthValidatorExtension, minNumberValidatorExtension, noneOfValidatorExtension, numericValidatorExtension, oddValidatorExtension, oneOfValidatorExtension, passwordcValidatorExtension, patternValidatorExtension, rangeValidatorExtension, requiredValidatorExtension, timeValidatorExtension, upperCaseValidatorExtension, urlValidatorExtension, asciiValidatorExtension, dataUriValidatorExtension, portValidatorExtension, latLongValidatorExtension, extensionValidatorExtension, fileSizeValidatorExtension, endsWithValidatorExtension, startsWithValidatorExtension, primeNumberValidatorExtension, latitudeValidatorExtension, longitudeValidatorExtension, composeValidatorExtension, fileValidatorExtension, customValidatorExtension, uniqueValidatorExtension, imageValidatorExtension, notEmptyValidatorExtension, ipValidatorExtension, cusipValidatorExtension, gridValidatorExtension, dateValidatorExtension, andValidatorExtension, orValidatorExtension, notValidatorExtension, maxTimeValidatorExtension, minTimeValidatorExtension, requiredTrueValidatorExtension, maskValidatorExtension } from './index';
export class RxwebValidators {
}
RxwebValidators.alpha = alphaValidatorExtension;
RxwebValidators.allOf = allOfValidatorExtension;
RxwebValidators.alphaNumeric = alphaNumericValidatorExtension;
RxwebValidators.choice = choiceValidatorExtension;
RxwebValidators.compare = compareValidatorExtension;
RxwebValidators.contains = containsValidatorExtension;
RxwebValidators.creditCard = creditCardValidatorExtension;
RxwebValidators.different = differentValidatorExtension;
RxwebValidators.digit = digitValidatorExtension;
RxwebValidators.email = emailValidatorExtension;
RxwebValidators.even = evenValidatorExtension;
RxwebValidators.factor = factorValidatorExtension;
RxwebValidators.greaterThanEqualTo = greaterThanEqualToValidatorExtension;
RxwebValidators.greaterThan = greaterThanValidatorExtension;
RxwebValidators.hexColor = hexColorValidatorExtension;
RxwebValidators.json = jsonValidatorExtension;
RxwebValidators.leapYear = leapYearValidatorExtension;
RxwebValidators.lessThanEqualTo = lessThanEqualToValidatorExtension;
RxwebValidators.lessThan = lessThanValidatorExtension;
RxwebValidators.lowerCase = lowerCaseValidatorExtension;
RxwebValidators.mac = macValidatorExtension;
RxwebValidators.maxDate = maxDateValidatorExtension;
RxwebValidators.maxLength = maxLengthValidatorExtension;
RxwebValidators.maxNumber = maxNumberValidatorExtension;
RxwebValidators.minDate = minDateValidatorExtension;
RxwebValidators.minLength = minLengthValidatorExtension;
RxwebValidators.minNumber = minNumberValidatorExtension;
RxwebValidators.noneOf = noneOfValidatorExtension;
RxwebValidators.numeric = numericValidatorExtension;
RxwebValidators.odd = oddValidatorExtension;
RxwebValidators.oneOf = oneOfValidatorExtension;
RxwebValidators.password = passwordcValidatorExtension;
RxwebValidators.pattern = patternValidatorExtension;
RxwebValidators.range = rangeValidatorExtension;
RxwebValidators.required = requiredValidatorExtension;
RxwebValidators.time = timeValidatorExtension;
RxwebValidators.upperCase = upperCaseValidatorExtension;
RxwebValidators.url = urlValidatorExtension;
RxwebValidators.ascii = asciiValidatorExtension;
RxwebValidators.dataUri = dataUriValidatorExtension;
RxwebValidators.port = portValidatorExtension;
RxwebValidators.latLong = latLongValidatorExtension;
RxwebValidators.extension = extensionValidatorExtension;
RxwebValidators.fileSize = fileSizeValidatorExtension;
RxwebValidators.endsWith = endsWithValidatorExtension;
RxwebValidators.startsWith = startsWithValidatorExtension;
RxwebValidators.primeNumber = primeNumberValidatorExtension;
RxwebValidators.latitude = latitudeValidatorExtension;
RxwebValidators.longitude = longitudeValidatorExtension;
RxwebValidators.compose = composeValidatorExtension;
RxwebValidators.file = fileValidatorExtension;
RxwebValidators.custom = customValidatorExtension;
RxwebValidators.unique = uniqueValidatorExtension;
RxwebValidators.image = imageValidatorExtension;
RxwebValidators.notEmpty = notEmptyValidatorExtension;
RxwebValidators.ip = ipValidatorExtension;
RxwebValidators.cusip = cusipValidatorExtension;
RxwebValidators.grid = gridValidatorExtension;
RxwebValidators.date = dateValidatorExtension;
RxwebValidators.and = andValidatorExtension;
RxwebValidators.or = orValidatorExtension;
RxwebValidators.not = notValidatorExtension;
RxwebValidators.minTime = minTimeValidatorExtension;
RxwebValidators.maxTime = maxTimeValidatorExtension;
RxwebValidators.requiredTrue = requiredTrueValidatorExtension;
RxwebValidators.mask = maskValidatorExtension;
//# sourceMappingURL=data:application/json;base64,